<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
          xmlns:tools="http://schemas.android.com/tools"
          package="phil.homework.threadingproject">
    <!--
         The ACCESS_COARSE/FINE_LOCATION permissions are not required to use
         Google Maps Android API v2, but you must specify either coarse or fine
         location permissions for the 'MyLocation' functionality.
    -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>

    <permission android:name="com.philbas.permission"/>

    <uses-permission android:name="android.permission.INTERNET"/>

    <application
            android:name=".ThreadingApp"
            android:allowBackup="true"
            android:icon="@mipmap/ic_launcher"
            android:label="@string/app_name"
            android:roundIcon="@mipmap/ic_launcher_round"
            android:supportsRtl="true"
            android:theme="@style/AppTheme"
            android:usesCleartextTraffic="true"
            tools:ignore="GoogleAppIndexingWarning">
        <activity android:name=".moviedb.ui.moviedetail.MovieDetailActivity">
        </activity>
        <activity android:name=".moviedb.ui.movielist.MovieListActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>

                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
        <activity android:name=".ui.activity.CustomViewActivity">

        </activity>
        <!--
             The API key for Google Maps-based APIs is defined as a string resource.
             (See the file "res/values/google_maps_api.xml").
             Note that the API key is linked to the encryption key used to sign the APK.
             You need a different API key for each encryption key, including the release key that is used to
             sign the APK for publishing.
             You can define the keys for the debug and release targets in src/debug/ and src/release/.
        -->
        <meta-data
                android:name="com.google.android.geo.API_KEY"
                android:value="@string/google_maps_key"/>

        <activity
                android:name=".ui.activity.MapsActivity"
                android:label="@string/title_activity_maps">
        </activity>
        <activity android:name=".ui.activity.github.GithubActivity">
        </activity>
        <activity android:name=".ui.activity.firebase.FirebaseActivity">
        </activity>
        <activity android:name=".ui.activity.FragmentActivity">
        </activity>
        <activity android:name=".ui.activity.NetworkActivity">
        </activity>

        <service
                android:name=".service.MyJobService"
                android:enabled="true"
                android:exported="true"
                android:permission="android.permission.BIND_JOB_SERVICE">
        </service>
        <service
                android:name=".service.MyBoundService"
                android:enabled="true"
                android:exported="true">
        </service>
        <service
                android:name=".service.MyIntentService"
                android:exported="false">
        </service>
        <service
                android:name=".service.MyNormalService"
                android:enabled="true"
                android:exported="true"
                android:process=":newProcess">
        </service>

        <activity android:name=".ui.activity.ServiceActivity">
        </activity>

        <receiver
                android:name=".receiver.MyStaticReceiver"
                android:enabled="true"
                android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.AIRPLANE_MODE"/>
            </intent-filter>
        </receiver>

        <activity android:name=".ui.activity.ReceiverActivity">
        </activity>
        <activity android:name=".ui.activity.MainActivity">
        </activity>

        <service android:name=".service.FirebaseService">
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT"/>
            </intent-filter>
        </service>
    </application>

</manifest>